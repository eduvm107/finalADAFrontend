import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import React from 'react';
import { Search, Filter, MessageCircle, Clock, MapPin, AlertTriangle, Shield, Heart, Home, Flame } from 'lucide-react';
const getIncidentIcon = (type) => {
    const icons = {
        'robo': _jsx(Shield, { className: "w-4 h-4" }), 'emergencia-medica': _jsx(Heart, { className: "w-4 h-4" }), 'violencia-familiar': _jsx(Home, { className: "w-4 h-4" }), 'incendio': _jsx(Flame, { className: "w-4 h-4" }), 'otro': _jsx(AlertTriangle, { className: "w-4 h-4" })
    };
    return icons[type] || _jsx(AlertTriangle, { className: "w-4 h-4" });
};
const getIncidentColor = (type) => {
    const colors = {
        'robo': 'bg-red-100 text-red-800 border-red-200', 'emergencia-medica': 'bg-blue-100 text-blue-800 border-blue-200', 'violencia-familiar': 'bg-purple-100 text-purple-800 border-purple-200', 'incendio': 'bg-orange-100 text-orange-800 border-orange-200', 'otro': 'bg-gray-100 text-gray-800 border-gray-200'
    };
    return colors[type] || 'bg-gray-100 text-gray-800 border-gray-200';
};
// Componente para el foro de reportes
const IncidentForum = ({ incidents, searchTerm, setSearchTerm, filterType, setFilterType, getFilteredIncidents }) => {
    const filteredIncidents = getFilteredIncidents();
    return (_jsxs("div", { className: "bg-white rounded-lg shadow p-6", children: [_jsx("h2", { className: "text-xl font-semibold mb-4", children: "Foro de Reportes" }), _jsxs("div", { className: "flex flex-col sm:flex-row gap-4 mb-6", children: [_jsx("div", { className: "flex-1", children: _jsxs("div", { className: "relative", children: [_jsx(Search, { className: "absolute left-3 top-3 w-4 h-4 text-gray-400" }), _jsx("input", { type: "text", placeholder: "Buscar reportes...", value: searchTerm, onChange: (e) => setSearchTerm(e.target.value), className: "w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500" })] }) }), _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx(Filter, { className: "w-4 h-4 text-gray-400" }), _jsxs("select", { value: filterType, onChange: (e) => setFilterType(e.target.value), className: "border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-red-500", children: [_jsx("option", { value: "all", children: "Todos los tipos" }), _jsx("option", { value: "robo", children: "Robo" }), _jsx("option", { value: "emergencia-medica", children: "Emergencia M\u00E9dica" }), _jsx("option", { value: "violencia-familiar", children: "Violencia Familiar" }), _jsx("option", { value: "incendio", children: "Incendio" }), _jsx("option", { value: "otro", children: "Otro" })] })] })] }), _jsxs("div", { className: "space-y-4", children: [filteredIncidents.map((incident) => (_jsx("div", { className: "border rounded-lg p-4 hover:bg-gray-50", children: _jsxs("div", { className: "flex items-start space-x-3", children: [_jsx("div", { className: `p-2 rounded-full ${getIncidentColor(incident.type)}`, children: getIncidentIcon(incident.type) }), _jsxs("div", { className: "flex-1", children: [_jsxs("div", { className: "flex items-center space-x-2 mb-2", children: [_jsx("span", { className: `px-2 py-1 rounded-full text-xs font-medium border ${getIncidentColor(incident.type)}`, children: incident.type.replace('-', ' ').toUpperCase() }), _jsx("span", { className: "text-xs text-gray-500", children: incident.anonymous ? 'Anónimo' : 'Usuario registrado' })] }), _jsx("p", { className: "text-gray-900 mb-2", children: incident.description || 'Sin descripción' }), _jsxs("div", { className: "flex items-center space-x-4 text-sm text-gray-500", children: [_jsxs("div", { className: "flex items-center space-x-1", children: [_jsx(Clock, { className: "w-4 h-4" }), _jsx("span", { children: new Date(incident.timestamp).toLocaleString() })] }), _jsxs("div", { className: "flex items-center space-x-1", children: [_jsx(MapPin, { className: "w-4 h-4" }), _jsxs("span", { children: [incident.location.lat.toFixed(4), ", ", incident.location.lng.toFixed(4)] })] })] })] })] }) }, incident.id))), filteredIncidents.length === 0 && (_jsxs("div", { className: "text-center py-8", children: [_jsx(MessageCircle, { className: "w-12 h-12 text-gray-400 mx-auto mb-4" }), _jsx("p", { className: "text-gray-600", children: "No hay reportes que coincidan con los filtros" })] }))] })] }));
};
export default IncidentForum;
